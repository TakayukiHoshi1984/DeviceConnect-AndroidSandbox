# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: dConnectManager CI

on: [push, pull_request]

jobs:
  release:
    name: release
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.0.5
#       - name: Build project
#         env:
#           GPR_USER: ${{ secrets.GPR_USER }}
#           GPR_API_KEY: ${{ secrets.GPR_API_KEY }}
#         run: |
#           cd dConnectManager/dConnectManager
#           chmod +x ./gradlew
#           ./gradlew assembleDebug
#           ls dconnect-manager-app/build/outputs/apk/debug
      - name: Emulator
        run: |
          /Users/runner/android-sdk/tools/bin/sdkmanager --list
          echo -n no | /Users/runner/android-sdk/tools/bin/sdkmanager "system-images;android-29;default;x86_64"       
          /Users/runner/android-sdk/tools/bin/avdmanager create avd -n emulator --package "system-images;android-29;default;x86_64" --tag default
          /Users/runner/android-sdk/emulator/emulator @emulator -no-snapshot-save -noaudio -no-boot-anim -timezone Asia/Tokyo &
          adb devices
#       - uses: malinskiy/action-android/emulator-run-cmd@release/0.0.7
#         with:
#           cmd: ./gradlew connectedCheck --stacktrace
#           api: 29
#           tag: default
#           abi: x86_64
#           cmdOptions: -no-snapshot-save -noaudio -no-boot-anim -timezone Asia/Tokyo
#       - name: Generate Javadoc For SDK
#         if: always()
#         run: ./gradlew generateJavadocForSDK
#       - name: Generate Javadoc For SDKJUnit
#         if: always()
#         run: ./gradlew generateJavadocForSDKJUnit
#       - name: Publish AAR
#         env:
#           GPR_USER: ${{ secrets.GPR_USER }}
#           GPR_API_KEY: ${{ secrets.GPR_API_KEY }}
#         run: |
#           chmod +x ./gradlew
#           ./gradlew assembleRelease publish    
#       - name: Upload apk file
#         if: always()
#         uses: actions/upload-artifact@v1
#         with:
#           name: Upload dconnect-sdk-for-android release aar
#           path: dconnect-sdk-for-android/build/outputs/aar/dconnect-sdk-for-android-release.aar
#       - name: Pack test result and document in zip file
#         if: always()
#         run: |
#           sudo zip -r DeviceConnectSDK-Javadoc.zip ./DeviceConnectSDK-Javadoc
#           sudo zip -r DeviceConnectSDK-JUnit-Javadoc.zip ./DeviceConnectSDK-JUnit-Javadoc
#           cd dconnect-sdk-for-android/build/reports/androidTests
#           sudo mv connected code-coverage-report
#           sudo zip -r release.zip ./code-coverage-report
#       - name: Archive code coverage results
#         if: always()
#         uses: actions/upload-artifact@v1
#         with:
#           name: code-coverage-report
#           path: dconnect-sdk-for-android/build/reports/androidTests/release.zip
#       - name: Archive DeviceConnectSDK-Javadoc
#         if: always()
#         uses: actions/upload-artifact@v1
#         with:
#           name: DeviceConnectSDK-Javadoc
#           path: DeviceConnectSDK-Javadoc.zip
#       - name: Archive DeviceConnectSDK-Javadoc
#         if: always()
#         uses: actions/upload-artifact@v1
#         with:
#           name: DeviceConnectSDK-JUnit-Javadoc
#           path: DeviceConnectSDK-JUnit-Javadoc.zip
